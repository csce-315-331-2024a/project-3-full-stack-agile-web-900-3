# this is my controller

package projectone.demo.controller;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RestController;

import lombok.AllArgsConstructor;
import lombok.NonNull;
import projectone.demo.repository.ManagerRepository;
import projectone.demo.model.Products;

import java.util.List;

@RestController
@AllArgsConstructor
@NonNull
@RequestMapping("/") // Base mapping for all methods in this controller
public class ManagerController {

    private final ManagerRepository managerRepository;

    @GetMapping("/manager")
    public ResponseEntity<List<Products>> listMenuItems() {
        List<Products> menuItems = managerRepository.findAll(); 
        return ResponseEntity.ok().body(menuItems);
    }

    @PostMapping("/post") // Mapped to POST /post
    public ResponseEntity<Void> insertProduct(@RequestBody Products products) {
        System.out.println("Received Product: " + products);

        managerRepository.save(products);
        return ResponseEntity.noContent().build();
    }

    @DeleteMapping("/delete")
    public ResponseEntity<Void> deleteSelectedMenuItems(@RequestBody List<Long> productIds) {
        productIds.forEach(id -> {
            managerRepository.deleteById(id);
        });
        return ResponseEntity.noContent().build();
    }
}



# this is my html

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Product Management</title>
  <link rel="stylesheet" href="manager.css">
</head>
<body>
  <div class="app">
    <div class="form-container">
      <form id="product-form" class="product-form">
        <label for="name">Enter Name:</label>
        <input type="text" id="name" required>
        <br>
        <label for="price">Enter Price:</label>
        <input type="number" id="price" required>
        <br>
        <button type="submit">Add Product</button>
      </form>
    </div>
    <div id="table-container" class="table-container">
      <h2>Product List</h2>
      <table id="product-table" class="product-table">
        <thead>
          <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Price</th>
            <th>Delete</th>
          </tr>
        </thead>
        <tbody id="product-body">
          <!-- Table rows will be dynamically inserted here -->
        </tbody>
      </table>
      <button id="delete-selected" class="delete-button" disabled>Delete Selected</button>
    </div>
  </div>

  <script src="manager.js"></script>
</body>
</html>

# this is my javascript

const fetchProducts = async () => {
  try {
    const response = await fetch('/list');
    const products = await response.json();
    const tableBody = document.getElementById('product-body');

    // Clear table body before populating
    tableBody.innerHTML = '';

    products.forEach(products => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${products.id}</td>
        <td>${products.name}</td>
        <td>${products.price}</td>
        <td><input type="checkbox" data-id="${products.id}"></td>
      `;
      tableBody.appendChild(row);
    });
  } catch (error) {
    console.error('Error fetching data:', error);
  }
};

# this is the name of my table called products
List of relations
Schema |      Name      | Type  |        Owner        
--------+----------------+-------+---------------------
public | inventory      | table | csce331_900_03_user
public | order_products | table | csce331_900_03_user
public | orders         | table | csce331_900_03_user
public | products       | table | csce331_900_03_user
(4 rows)

# this is how my columns are set up

product_id |    productname    | price 
------------+-------------------+-------
          1 | Revs              |  5.59
          2 | DBL CHZ           |  8.79
          3 | classic           |  5.49
          4 | Bacon             |  6.99

Please  make this code work so i can post data to the data base, and once it posts, have it display the new data on the screen