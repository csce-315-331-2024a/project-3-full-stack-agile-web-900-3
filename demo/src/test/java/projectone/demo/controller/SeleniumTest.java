package projectone.demo.controller;// Generated by Selenium IDE


import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.AfterEach;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
import org.springframework.boot.test.mock.mockito.MockBean;
import projectone.demo.repository.ProductsRepository;

import java.time.Duration;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
@WebMvcTest(MenuBoard.class)
public class SeleniumTest {
    @MockBean
    private ProductsRepository productsRepository;
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;
    @BeforeEach
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    @AfterEach
    public void tearDown() {
        driver.quit();
    }
    @Test
    public void menuboard() {
        driver.get("http://webhosting331.com:8080/");
        driver.manage().window().setSize(new Dimension(1552, 928));
        driver.findElement(By.cssSelector(".btn-rounded:nth-child(4)")).click();
        driver.findElement(By.cssSelector(".menu")).click();
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        WebElement element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector("h5:nth-child(3)")));
        element.click();
        driver.findElement(By.cssSelector(".goog-te-combo")).click();
        {
            WebElement dropdown = driver.findElement(By.cssSelector(".goog-te-combo"));
            dropdown.findElement(By.xpath("//option[. = 'Arabic']")).click();
        }
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        try {
            Thread.sleep(5000); // Sleeps for 10,000 milliseconds or 10 seconds
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        WebElement dropdown = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(".goog-te-combo")));
        dropdown.click(); // to open the dropdown and ensure all options are loaded

// Now using explicit wait to ensure the option is present and selectable
        Select select = new Select(wait.until(ExpectedConditions.visibilityOf(dropdown)));
        select.selectByValue("en");
    }
}